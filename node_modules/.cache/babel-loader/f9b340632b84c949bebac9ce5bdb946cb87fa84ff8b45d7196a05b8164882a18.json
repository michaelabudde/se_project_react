{"ast":null,"code":"var _jsxFileName = \"/Users/michaelabudde/practicum/fullstack/se_project_react/src/contexts/CurrentTemperatureUnitContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\n\n// Creating the context with default values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentTemperatureUnitContext = /*#__PURE__*/createContext({\n  currentTemperatureUnit: \"F\",\n  handleToggleSwitchChange: () => {}\n});\n\n// Creating the provider component\nexport const CurrentTemperatureUnitProvider = ({\n  children\n}) => {\n  _s();\n  // State variable and function for managing temperature unit\n  const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n  // Function for handling toggle switch change\n  const handleToggleSwitchChange = () => {\n    setCurrentTemperatureUnit(prevUnit => prevUnit === \"F\" ? \"C\" : \"F\");\n  };\n  return /*#__PURE__*/_jsxDEV(CurrentTemperatureUnitContext.Provider, {\n    value: (currentTemperatureUnit, setCurrentTemperatureUnit),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n// attempted new code:\n// import { createContext, useState } from \"react\";\n// const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n// const handleToggleSwitchChange = () => {\n//   setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n// };\n// export const CurrentTemperatureUnitContext = createContext({\n//   currentTemperatureUnit: \"F\",\n//   handleToggleSwitchChange: () => {},\n// });\n\n// My original code :\n\n// import React, { useState } from \"react\";\n\n// const CurrentTemperatureUnitContext = React.createContext({\n//   currentTemperatureUnit: \"\",\n//   handleToggleSwitchChange: () => {},\n// });\n// // CurrentTemperatureUnitContext\n// const CurrentTemperatureUnitProvider = ({ children }) => {\n//   const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n//   const handleToggleSwitchChange = () => {\n//     setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n//   };\n\n//   return (\n//     <CurrentTemperatureUnitContext.Provider\n//       value={{ currentTemperatureUnit, handleToggleSwitchChange }}\n//     >\n//       {children}\n//     </CurrentTemperatureUnitContext.Provider>\n//   );\n// };\n\n// export { CurrentTemperatureUnitProvider, CurrentTemperatureUnitContext };\n_s(CurrentTemperatureUnitProvider, \"4XSj9OJVeUH6x7yAiUq3B+gzYPM=\");\n_c = CurrentTemperatureUnitProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrentTemperatureUnitProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","CurrentTemperatureUnitContext","currentTemperatureUnit","handleToggleSwitchChange","CurrentTemperatureUnitProvider","children","_s","setCurrentTemperatureUnit","prevUnit","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelabudde/practicum/fullstack/se_project_react/src/contexts/CurrentTemperatureUnitContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\n// Creating the context with default values\nexport const CurrentTemperatureUnitContext = createContext({\n  currentTemperatureUnit: \"F\",\n  handleToggleSwitchChange: () => {},\n});\n\n// Creating the provider component\nexport const CurrentTemperatureUnitProvider = ({ children }) => {\n  // State variable and function for managing temperature unit\n  const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n  // Function for handling toggle switch change\n  const handleToggleSwitchChange = () => {\n    setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n  };\n\n  return (\n    <CurrentTemperatureUnitContext.Provider\n      value={(currentTemperatureUnit, setCurrentTemperatureUnit)}\n    >\n      {children}\n    </CurrentTemperatureUnitContext.Provider>\n  );\n};\n\n// attempted new code:\n// import { createContext, useState } from \"react\";\n// const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n// const handleToggleSwitchChange = () => {\n//   setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n// };\n// export const CurrentTemperatureUnitContext = createContext({\n//   currentTemperatureUnit: \"F\",\n//   handleToggleSwitchChange: () => {},\n// });\n\n// My original code :\n\n// import React, { useState } from \"react\";\n\n// const CurrentTemperatureUnitContext = React.createContext({\n//   currentTemperatureUnit: \"\",\n//   handleToggleSwitchChange: () => {},\n// });\n// // CurrentTemperatureUnitContext\n// const CurrentTemperatureUnitProvider = ({ children }) => {\n//   const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n//   const handleToggleSwitchChange = () => {\n//     setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n//   };\n\n//   return (\n//     <CurrentTemperatureUnitContext.Provider\n//       value={{ currentTemperatureUnit, handleToggleSwitchChange }}\n//     >\n//       {children}\n//     </CurrentTemperatureUnitContext.Provider>\n//   );\n// };\n\n// export { CurrentTemperatureUnitProvider, CurrentTemperatureUnitContext };\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,6BAA6B,gBAAGJ,aAAa,CAAC;EACzDK,sBAAsB,EAAE,GAAG;EAC3BC,wBAAwB,EAAEA,CAAA,KAAM,CAAC;AACnC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,8BAA8B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9D;EACA,MAAM,CAACJ,sBAAsB,EAAEK,yBAAyB,CAAC,GAAGT,QAAQ,CAAC,GAAG,CAAC;;EAEzE;EACA,MAAMK,wBAAwB,GAAGA,CAAA,KAAM;IACrCI,yBAAyB,CAAEC,QAAQ,IAAMA,QAAQ,KAAK,GAAG,GAAG,GAAG,GAAG,GAAI,CAAC;EACzE,CAAC;EAED,oBACER,OAAA,CAACC,6BAA6B,CAACQ,QAAQ;IACrCC,KAAK,GAAGR,sBAAsB,EAAEK,yBAAyB,CAAE;IAAAF,QAAA,EAE1DA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC6B,CAAC;AAE7C,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAR,EAAA,CAvDaF,8BAA8B;AAAAW,EAAA,GAA9BX,8BAA8B;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}