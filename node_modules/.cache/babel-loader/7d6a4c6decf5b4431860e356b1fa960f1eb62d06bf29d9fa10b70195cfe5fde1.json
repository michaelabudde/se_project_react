{"ast":null,"code":"import { baseUrl } from \"./constants\";\nexport const processServerResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return res.json()\n  // runs if res does not have a json body/ fails to parse\n  .catch(() => {\n    return Promise.reject(new Error(`Error: ${res.status}`));\n  })\n  // we pass back the error message from the backend if it was json\n  .then(resBody => {\n    return Promise.reject(new Error(resBody.message));\n  });\n};\nexport const api = async (method, endpoint, token = \"\", body = null) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: token ? `Bearer ${token}` : \"\"\n  };\n  const requestOptions = {\n    method: method,\n    headers: headers,\n    body: body ? JSON.stringify(body) : null\n  };\n  const res = await fetch(`${baseUrl}${endpoint}`, requestOptions);\n  return processServerResponse(res);\n};\n// debugger;\n\nexport const getItems = async token => {\n  try {\n    const response = await api(\"GET\", \"/items\", token);\n    return response; // Return the response from the API call\n  } catch (error) {\n    // Handle errors if needed\n    console.error(\"Error fetching items:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\nexport const addItem = async (token, newItem) => {\n  try {\n    const res = await api(\"POST\", \"/items\", token, newItem);\n    return res; // Return the response\n  } catch (error) {\n    // Handle errors if needed\n    console.error(\"Error adding item:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\nexport const deleteItem = async (token, itemId) => {\n  try {\n    const res = await api(\"DELETE\", \"/items\", token, itemId);\n    return res;\n  } catch (error) {\n    console.error(\"Error deleting item:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\nexport const fetchUserInfo = async token => {\n  try {\n    const currentUser = await api(\"GET\", \"/users/me\", token);\n    if (currentUser) {\n      return currentUser.data;\n    } else {\n      console.error(\"Can't access user\");\n      return null; // Handle fetch failure by returning null\n    }\n  } catch (error) {\n    console.error(\"Error during fetchUserInfo:\", error);\n    return null; // Handle fetch failure by returning null\n  }\n};","map":{"version":3,"names":["baseUrl","processServerResponse","res","ok","json","catch","Promise","reject","Error","status","then","resBody","message","api","method","endpoint","token","body","headers","Authorization","requestOptions","JSON","stringify","fetch","getItems","response","error","console","addItem","newItem","deleteItem","itemId","fetchUserInfo","currentUser","data"],"sources":["/Users/michaelabudde/practicum/fullstack/se_project_react/src/utils/api.js"],"sourcesContent":["import { baseUrl } from \"./constants\";\n\nexport const processServerResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return (\n    res\n      .json()\n      // runs if res does not have a json body/ fails to parse\n      .catch(() => {\n        return Promise.reject(new Error(`Error: ${res.status}`));\n      })\n      // we pass back the error message from the backend if it was json\n      .then((resBody) => {\n        return Promise.reject(new Error(resBody.message));\n      })\n  );\n};\n\nexport const api = async (method, endpoint, token = \"\", body = null) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: token ? `Bearer ${token}` : \"\",\n  };\n  const requestOptions = {\n    method: method,\n    headers: headers,\n    body: body ? JSON.stringify(body) : null,\n  };\n  const res = await fetch(`${baseUrl}${endpoint}`, requestOptions);\n  return processServerResponse(res);\n};\n// debugger;\n\nexport const getItems = async (token) => {\n  try {\n    const response = await api(\"GET\", \"/items\", token);\n\n    return response; // Return the response from the API call\n  } catch (error) {\n    // Handle errors if needed\n    console.error(\"Error fetching items:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\n\nexport const addItem = async (token, newItem) => {\n  try {\n    const res = await api(\"POST\", \"/items\", token, newItem);\n    return res; // Return the response\n  } catch (error) {\n    // Handle errors if needed\n    console.error(\"Error adding item:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\n\nexport const deleteItem = async (token, itemId) => {\n  try {\n    const res = await api(\"DELETE\", \"/items\", token, itemId);\n    return res;\n  } catch (error) {\n    console.error(\"Error deleting item:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\nexport const fetchUserInfo = async (token) => {\n  try {\n    const currentUser = await api(\"GET\", \"/users/me\", token);\n    if (currentUser) {\n      return currentUser.data;\n    } else {\n      console.error(\"Can't access user\");\n      return null; // Handle fetch failure by returning null\n    }\n  } catch (error) {\n    console.error(\"Error during fetchUserInfo:\", error);\n    return null; // Handle fetch failure by returning null\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}