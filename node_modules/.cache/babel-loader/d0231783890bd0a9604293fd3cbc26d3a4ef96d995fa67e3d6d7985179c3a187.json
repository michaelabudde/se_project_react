{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from \"react\";\nexport function useFormAndValidation() {\n  _s();\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    avatar: \"\",\n    imageUrl: \"\",\n    weather: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(true);\n  const [delayedErrors, setDelayedErrors] = useState({});\n  const handleChange = event => {\n    event.preventDefault();\n    const {\n      name,\n      value,\n      type\n    } = event.target;\n    if (type === \"radio\") {\n      // For radio inputs, update the value directly\n      setValues({\n        ...values,\n        [name]: value\n      });\n      setErrors({\n        ...errors,\n        [name]: \"\"\n      }); // Clear radio-related errors\n    } else {\n      // For other inputs, update the value and perform validation\n      setValues({\n        ...values,\n        [name]: value\n      });\n      setErrors({\n        ...errors,\n        [name]: event.target.validationMessage\n      });\n    }\n    setIsValid(event.target.closest(\"form\").checkValidity());\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDelayedErrors(errors);\n    }, 900);\n    return () => clearTimeout(timer);\n  }, [errors]);\n  const resetForm = useCallback((newValues = {}, newErrors = {}, newIsValid = false) => {\n    setValues(newValues);\n    setErrors(newErrors);\n    setIsValid(newIsValid);\n    setDelayedErrors({});\n  }, [setValues, setErrors, setIsValid]);\n  return {\n    values,\n    errors: delayedErrors,\n    isValid,\n    handleChange,\n    resetForm,\n    setErrors\n  };\n}\n_s(useFormAndValidation, \"50qJLyXBfaNNsBoVS0vC3xkrkiM=\");","map":{"version":3,"names":["useState","useCallback","useEffect","useFormAndValidation","_s","values","setValues","name","email","avatar","imageUrl","weather","errors","setErrors","isValid","setIsValid","delayedErrors","setDelayedErrors","handleChange","event","preventDefault","value","type","target","validationMessage","closest","checkValidity","timer","setTimeout","clearTimeout","resetForm","newValues","newErrors","newIsValid"],"sources":["/Users/michaelabudde/practicum/fullstack/se_project_react/src/hooks/useFormAndValidation.js"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nexport function useFormAndValidation() {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    avatar: \"\",\n    imageUrl: \"\",\n    weather: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(true);\n  const [delayedErrors, setDelayedErrors] = useState({});\n  const handleChange = (event) => {\n    event.preventDefault();\n    const { name, value, type } = event.target;\n\n    if (type === \"radio\") {\n      // For radio inputs, update the value directly\n      setValues({ ...values, [name]: value });\n      setErrors({ ...errors, [name]: \"\" }); // Clear radio-related errors\n    } else {\n      // For other inputs, update the value and perform validation\n      setValues({ ...values, [name]: value });\n      setErrors({ ...errors, [name]: event.target.validationMessage });\n    }\n\n    setIsValid(event.target.closest(\"form\").checkValidity());\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDelayedErrors(errors);\n    }, 900);\n    return () => clearTimeout(timer);\n  }, [errors]);\n  const resetForm = useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n      setDelayedErrors({});\n    },\n    [setValues, setErrors, setIsValid]\n  );\n\n  return {\n    values,\n    errors: delayedErrors,\n    isValid,\n    handleChange,\n    resetForm,\n    setErrors,\n  };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACxD,OAAO,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC;IACnCO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAMkB,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAM;MAAEb,IAAI;MAAEc,KAAK;MAAEC;IAAK,CAAC,GAAGH,KAAK,CAACI,MAAM;IAE1C,IAAID,IAAI,KAAK,OAAO,EAAE;MACpB;MACAhB,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAE,CAACE,IAAI,GAAGc;MAAM,CAAC,CAAC;MACvCR,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAE,CAACL,IAAI,GAAG;MAAG,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MACL;MACAD,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAE,CAACE,IAAI,GAAGc;MAAM,CAAC,CAAC;MACvCR,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAE,CAACL,IAAI,GAAGY,KAAK,CAACI,MAAM,CAACC;MAAkB,CAAC,CAAC;IAClE;IAEAT,UAAU,CAACI,KAAK,CAACI,MAAM,CAACE,OAAO,CAAC,MAAM,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC;EAC1D,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd,MAAMyB,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BX,gBAAgB,CAACL,MAAM,CAAC;IAC1B,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMiB,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAACf,MAAM,CAAC,CAAC;EACZ,MAAMkB,SAAS,GAAG7B,WAAW,CAC3B,CAAC8B,SAAS,GAAG,CAAC,CAAC,EAAEC,SAAS,GAAG,CAAC,CAAC,EAAEC,UAAU,GAAG,KAAK,KAAK;IACtD3B,SAAS,CAACyB,SAAS,CAAC;IACpBlB,SAAS,CAACmB,SAAS,CAAC;IACpBjB,UAAU,CAACkB,UAAU,CAAC;IACtBhB,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,EACD,CAACX,SAAS,EAAEO,SAAS,EAAEE,UAAU,CACnC,CAAC;EAED,OAAO;IACLV,MAAM;IACNO,MAAM,EAAEI,aAAa;IACrBF,OAAO;IACPI,YAAY;IACZY,SAAS;IACTjB;EACF,CAAC;AACH;AAACT,EAAA,CApDeD,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}