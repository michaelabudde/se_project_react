{"ast":null,"code":"import { baseUrl } from \"./constants\";\nexport const api = async (method, path, authToken = null, data = null) => {\n  const baseUrl = \"http://localhost:3001\";\n  let options;\n  switch (method) {\n    case \"POST\":\n    case \"PATCH\":\n    case \"PUT\":\n      const body = data ? JSON.stringify(data) : null;\n      options = {\n        method: method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${authToken}`\n        },\n        body\n      };\n      break;\n    case \"DELETE\":\n      options = {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      };\n      break;\n    case \"GET\":\n      options = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      };\n      break;\n    case \"AUTH\":\n      options = data;\n      break;\n    default:\n      throw new Error(`Method not supported: ${method}`);\n  }\n  try {\n    const res = await fetch(`${baseUrl}/${path}`, options);\n    if (!res.ok) {\n      throw new Error(`Oops there's an error!: ${res.status}`);\n    }\n    return await res.json();\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const processServerResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Error: ${res.status}`);\n};\nexport const getClothingItems = async () => {\n  const res = await fetch(`${baseUrl}/items`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return processServerResponse(res);\n};\nexport const addClothingItem = async newItem => {\n  const res = await fetch(`${baseUrl}/items`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name: newItem.name,\n      weather: newItem.weather,\n      imageUrl: newItem.imageUrl\n    })\n  });\n  return processServerResponse(res);\n};\nexport const deleteClothingItems = async _id => {\n  const res = await fetch(`${baseUrl}/items/${_id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return processServerResponse(res);\n};\nexport const addLike = (data, token) => {\n  return api(\"PUT\", `items/${data.itemId}/likes`, token);\n};\nexport const removeLike = (data, token) => {\n  return api(\"DELETE\", `items/${data.itemId}/likes`, token);\n};","map":{"version":3,"names":["baseUrl","api","method","path","authToken","data","options","body","JSON","stringify","headers","authorization","Authorization","Error","res","fetch","ok","status","json","error","console","processServerResponse","Promise","reject","getClothingItems","addClothingItem","newItem","name","weather","imageUrl","deleteClothingItems","_id","addLike","token","itemId","removeLike"],"sources":["/Users/michaelabudde/practicum/fullstack/se_project_react/src/utils/api.js"],"sourcesContent":["import { baseUrl } from \"./constants\";\nexport const api = async (method, path, authToken = null, data = null) => {\n  const baseUrl = \"http://localhost:3001\";\n  let options;\n\n  switch (method) {\n    case \"POST\":\n    case \"PATCH\":\n    case \"PUT\":\n      const body = data ? JSON.stringify(data) : null;\n      options = {\n        method: method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${authToken}`,\n        },\n        body,\n      };\n      break;\n    case \"DELETE\":\n      options = {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      };\n      break;\n    case \"GET\":\n      options = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      };\n      break;\n    case \"AUTH\":\n      options = data;\n      break;\n    default:\n      throw new Error(`Method not supported: ${method}`);\n  }\n\n  try {\n    const res = await fetch(`${baseUrl}/${path}`, options);\n\n    if (!res.ok) {\n      throw new Error(`Oops there's an error!: ${res.status}`);\n    }\n\n    return await res.json();\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const processServerResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Error: ${res.status}`);\n};\n\nexport const getClothingItems = async () => {\n  const res = await fetch(`${baseUrl}/items`, {\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  return processServerResponse(res);\n};\n\nexport const addClothingItem = async (newItem) => {\n  const res = await fetch(`${baseUrl}/items`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      name: newItem.name,\n      weather: newItem.weather,\n      imageUrl: newItem.imageUrl,\n    }),\n  });\n  return processServerResponse(res);\n};\n\nexport const deleteClothingItems = async (_id) => {\n  const res = await fetch(`${baseUrl}/items/${_id}`, {\n    method: \"DELETE\",\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  return processServerResponse(res);\n};\nexport const addLike = (data, token) => {\n  return api(\"PUT\", `items/${data.itemId}/likes`, token);\n};\n\nexport const removeLike = (data, token) => {\n  return api(\"DELETE\", `items/${data.itemId}/likes`, token);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}