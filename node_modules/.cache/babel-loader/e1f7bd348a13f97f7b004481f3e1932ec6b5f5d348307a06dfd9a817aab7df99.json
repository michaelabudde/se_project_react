{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nconst CurrentTemperatureUnitContext = /*#__PURE__*/createContext({\n  currentTemperatureUnit: \"F\",\n  handleToggleSwitchChange: () => {}\n});\nconst useTemperatureUnit = () => {\n  _s();\n  return useContext(CurrentTemperatureUnitContext);\n};\n_s(useTemperatureUnit, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useTemperatureUnit, CurrentTemperatureUnitContext };\n\n// import { createContext, useState } from \"react\";\n\n// // Creating the context with default values\n// export const CurrentTemperatureUnitContext = createContext({\n//   currentTemperatureUnit: \"F\",\n//   handleToggleSwitchChange: () => {},\n// });\n\n// // Creating the provider component\n// export const CurrentTemperatureUnitProvider = ({ children }) => {\n//   // State variable and function for managing temperature unit\n//   const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n//   // Function for handling toggle switch change\n//   const handleToggleSwitchChange = () => {\n//     setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n//   };\n\n//   return (\n//     <CurrentTemperatureUnitContext.Provider\n//       value={(currentTemperatureUnit, setCurrentTemperatureUnit)}\n//     >\n//       {children}\n//     </CurrentTemperatureUnitContext.Provider>\n//   );\n// };\n\n// attempted new code:\n// import { createContext, useState } from \"react\";\n// const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n// const handleToggleSwitchChange = () => {\n//   setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n// };\n// export const CurrentTemperatureUnitContext = createContext({\n//   currentTemperatureUnit: \"F\",\n//   handleToggleSwitchChange: () => {},\n// });\n\n// My original code :\n\n// import React, { useState } from \"react\";\n\n// const CurrentTemperatureUnitContext = React.createContext({\n//   currentTemperatureUnit: \"\",\n//   handleToggleSwitchChange: () => {},\n// });\n// // CurrentTemperatureUnitContext\n// const CurrentTemperatureUnitProvider = ({ children }) => {\n//   const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n//   const handleToggleSwitchChange = () => {\n//     setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n//   };\n\n//   return (\n//     <CurrentTemperatureUnitContext.Provider\n//       value={{ currentTemperatureUnit, handleToggleSwitchChange }}\n//     >\n//       {children}\n//     </CurrentTemperatureUnitContext.Provider>\n//   );\n// };\n\n// export { CurrentTemperatureUnitProvider, CurrentTemperatureUnitContext };","map":{"version":3,"names":["createContext","useContext","CurrentTemperatureUnitContext","currentTemperatureUnit","handleToggleSwitchChange","useTemperatureUnit","_s"],"sources":["/Users/michaelabudde/practicum/fullstack/se_project_react/src/contexts/CurrentTemperatureUnitContext.js"],"sourcesContent":["import { createContext, useContext } from \"react\";\n\nconst CurrentTemperatureUnitContext = createContext({\n  currentTemperatureUnit: \"F\",\n  handleToggleSwitchChange: () => {},\n});\n\nconst useTemperatureUnit = () => {\n  return useContext(CurrentTemperatureUnitContext);\n};\n\nexport { useTemperatureUnit, CurrentTemperatureUnitContext };\n\n// import { createContext, useState } from \"react\";\n\n// // Creating the context with default values\n// export const CurrentTemperatureUnitContext = createContext({\n//   currentTemperatureUnit: \"F\",\n//   handleToggleSwitchChange: () => {},\n// });\n\n// // Creating the provider component\n// export const CurrentTemperatureUnitProvider = ({ children }) => {\n//   // State variable and function for managing temperature unit\n//   const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n//   // Function for handling toggle switch change\n//   const handleToggleSwitchChange = () => {\n//     setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n//   };\n\n//   return (\n//     <CurrentTemperatureUnitContext.Provider\n//       value={(currentTemperatureUnit, setCurrentTemperatureUnit)}\n//     >\n//       {children}\n//     </CurrentTemperatureUnitContext.Provider>\n//   );\n// };\n\n// attempted new code:\n// import { createContext, useState } from \"react\";\n// const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n// const handleToggleSwitchChange = () => {\n//   setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n// };\n// export const CurrentTemperatureUnitContext = createContext({\n//   currentTemperatureUnit: \"F\",\n//   handleToggleSwitchChange: () => {},\n// });\n\n// My original code :\n\n// import React, { useState } from \"react\";\n\n// const CurrentTemperatureUnitContext = React.createContext({\n//   currentTemperatureUnit: \"\",\n//   handleToggleSwitchChange: () => {},\n// });\n// // CurrentTemperatureUnitContext\n// const CurrentTemperatureUnitProvider = ({ children }) => {\n//   const [currentTemperatureUnit, setCurrentTemperatureUnit] = useState(\"F\");\n\n//   const handleToggleSwitchChange = () => {\n//     setCurrentTemperatureUnit((prevUnit) => (prevUnit === \"F\" ? \"C\" : \"F\"));\n//   };\n\n//   return (\n//     <CurrentTemperatureUnitContext.Provider\n//       value={{ currentTemperatureUnit, handleToggleSwitchChange }}\n//     >\n//       {children}\n//     </CurrentTemperatureUnitContext.Provider>\n//   );\n// };\n\n// export { CurrentTemperatureUnitProvider, CurrentTemperatureUnitContext };\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAEjD,MAAMC,6BAA6B,gBAAGF,aAAa,CAAC;EAClDG,sBAAsB,EAAE,GAAG;EAC3BC,wBAAwB,EAAEA,CAAA,KAAM,CAAC;AACnC,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,OAAOL,UAAU,CAACC,6BAA6B,CAAC;AAClD,CAAC;AAACI,EAAA,CAFID,kBAAkB;AAIxB,SAASA,kBAAkB,EAAEH,6BAA6B;;AAE1D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}