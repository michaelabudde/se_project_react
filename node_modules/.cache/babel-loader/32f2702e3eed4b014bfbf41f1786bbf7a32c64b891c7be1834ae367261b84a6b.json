{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { api } from \"../utils/api\";\nimport { login as loginConfig, signup as signupConfig } from \"../utils/auth\";\nconst useAuth = handleCloseModal => {\n  _s();\n  const {\n    setIsLoggedIn\n  } = useContext(AuthContext);\n  const {\n    setCurrentUser\n  } = useContext(CurrentUserContext);\n  const [response, setResponse] = useState(\"\");\n  const [signupError, setSignupError] = useState(null);\n  const [loginError, setLoginError] = useState(null);\n  const fetchUserInfo = useCallback(async authToken => {\n    const currentUser = await api(\"GET\", \"/users/me\", authToken);\n    if (currentUser) {\n      return currentUser.data;\n    } else {\n      console.error(\"Can't access user\");\n      throw Error(\"Error\");\n    }\n  }, []);\n  const handleLogIn = async ({\n    email,\n    password\n  }) => {\n    const config = loginConfig(email, password);\n    try {\n      const res = await api(\"POST\", \"/login\", \"\", config);\n      // Check if the response contains a token\n      if (res.token) {\n        localStorage.setItem(\"jwt\", res.token);\n        setIsLoggedIn(true);\n\n        // Fetch user info and update current user\n        const userInfo = await fetchUserInfo(res.token);\n        setCurrentUser(userInfo);\n        handleCloseModal(\"\");\n      } else {\n        console.error(res.message);\n        setResponse(res.message || \"Log in failed\");\n        setLoginError(res.message || \"Wrong email or password\");\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      setLoginError(error.message);\n    }\n  };\n  const handleSignUp = async ({\n    name,\n    avatar,\n    email,\n    password\n  }) => {\n    const config = signupConfig(name, avatar, email, password);\n    try {\n      const res = await api(\"POST\", \"/signup\", \"\", config);\n      // Check if the response is successful\n      if (res.data) {\n        // SignUp successful, proceed to login\n        await handleLogIn({\n          email,\n          password\n        });\n        handleCloseModal(\"\");\n      } else {\n        console.error(res.message);\n        setResponse(res.message || \"Sign up failed\");\n        setSignupError(res.message || \"Email already in use\");\n      }\n    } catch (error) {\n      console.error(\"Error during sign up:\", error);\n      setSignupError(error.message);\n      console.log(error.message);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"jwt\");\n    setIsLoggedIn(false);\n    setCurrentUser(null);\n    setCurrentUser({\n      avatar: \"T T\"\n    });\n    handleCloseModal(\"\");\n  };\n  return {\n    handleLogIn,\n    handleSignUp,\n    handleLogout,\n    response,\n    setResponse,\n    signupError,\n    setSignupError,\n    loginError,\n    setLoginError\n  };\n};\n_s(useAuth, \"0hzP82+8IX4aMHqOVSRbeB81lyU=\");\nexport default useAuth;","map":{"version":3,"names":["useState","useContext","CurrentUserContext","AuthContext","api","login","loginConfig","signup","signupConfig","useAuth","handleCloseModal","_s","setIsLoggedIn","setCurrentUser","response","setResponse","signupError","setSignupError","loginError","setLoginError","fetchUserInfo","useCallback","authToken","currentUser","data","console","error","Error","handleLogIn","email","password","config","res","token","localStorage","setItem","userInfo","message","handleSignUp","name","avatar","log","handleLogout","removeItem"],"sources":["/Users/michaelabudde/practicum/fullstack/se_project_react/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { api } from \"../utils/api\";\nimport { login as loginConfig, signup as signupConfig } from \"../utils/auth\";\n\nconst useAuth = (handleCloseModal) => {\n  const { setIsLoggedIn } = useContext(AuthContext);\n  const { setCurrentUser } = useContext(CurrentUserContext);\n  const [response, setResponse] = useState(\"\");\n  const [signupError, setSignupError] = useState(null);\n  const [loginError, setLoginError] = useState(null);\n\n  const fetchUserInfo = useCallback(async (authToken) => {\n    const currentUser = await api(\"GET\", \"/users/me\", authToken);\n    if (currentUser) {\n      return currentUser.data;\n    } else {\n      console.error(\"Can't access user\");\n      throw Error(\"Error\");\n    }\n  }, []);\n  const handleLogIn = async ({ email, password }) => {\n    const config = loginConfig(email, password);\n    try {\n      const res = await api(\"POST\", \"/login\", \"\", config);\n      // Check if the response contains a token\n      if (res.token) {\n        localStorage.setItem(\"jwt\", res.token);\n        setIsLoggedIn(true);\n\n        // Fetch user info and update current user\n        const userInfo = await fetchUserInfo(res.token);\n        setCurrentUser(userInfo);\n\n        handleCloseModal(\"\");\n      } else {\n        console.error(res.message);\n        setResponse(res.message || \"Log in failed\");\n        setLoginError(res.message || \"Wrong email or password\");\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      setLoginError(error.message);\n    }\n  };\n\n  const handleSignUp = async ({ name, avatar, email, password }) => {\n    const config = signupConfig(name, avatar, email, password);\n    try {\n      const res = await api(\"POST\", \"/signup\", \"\", config);\n      // Check if the response is successful\n      if (res.data) {\n        // SignUp successful, proceed to login\n        await handleLogIn({ email, password });\n        handleCloseModal(\"\");\n      } else {\n        console.error(res.message);\n        setResponse(res.message || \"Sign up failed\");\n        setSignupError(res.message || \"Email already in use\");\n      }\n    } catch (error) {\n      console.error(\"Error during sign up:\", error);\n      setSignupError(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"jwt\");\n    setIsLoggedIn(false);\n    setCurrentUser(null);\n    setCurrentUser({ avatar: \"T T\" });\n    handleCloseModal(\"\");\n  };\n  return {\n    handleLogIn,\n    handleSignUp,\n    handleLogout,\n    response,\n    setResponse,\n    signupError,\n    setSignupError,\n    loginError,\n    setLoginError,\n  };\n};\n\nexport default useAuth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}