{"ast":null,"code":"import{useState,useContext}from\"react\";import{CurrentUserContext}from\"../contexts/CurrentUserContext\";import{AuthContext}from\"../contexts/AuthContext\";import{api,fetchUserInfo}from\"../utils/api\";import{login as loginConfig,signup as signupConfig}from\"../utils/auth\";const useAuth=handleCloseModal=>{const{setIsLoggedIn}=useContext(AuthContext);const{setCurrentUser}=useContext(CurrentUserContext);const[errorResponse,setErrorResponse]=useState(\"\");// changed from response to be more specific\nconst[signupError,setSignupError]=useState(null);const[loginError,setLoginError]=useState(null);// debugger;\nconst handleLogIn=async _ref=>{let{email,password}=_ref;const config=loginConfig(email,password);try{const res=await api(\"POST\",\"/login\",\"\",config);// Check if the response contains a token\nif(res.token){localStorage.setItem(\"jwt\",res.token);setIsLoggedIn(true);// Fetch user info and update current user\nconst userInfo=await fetchUserInfo(res.token);setCurrentUser(userInfo);handleCloseModal(\"\");// does it need to handle close if subit already handles close?\n}else{console.error(res.message);setErrorResponse(res.message||\"Log in failed\");setLoginError(res.message||\"Wrong email or password\");}}catch(error){console.error(\"Error during login:\",error);setLoginError(error.message);}};const handleSignUp=async _ref2=>{let{name,avatar,email,password}=_ref2;const config=signupConfig(name,avatar,email,password);try{const res=await api(\"POST\",\"/signup\",\"\",config);// Check if the response is successful\nif(res.data){// SignUp successful, proceed to login\nawait handleLogIn({email,password});handleCloseModal(\"\");}else{console.error(res.message);setErrorResponse(res.message||\"Sign up failed\");setSignupError(res.message||\"Email already in use\");}}catch(error){console.error(\"Error during sign up:\",error);setSignupError(error.message);console.log(error.message);}};const handleLogout=()=>{localStorage.removeItem(\"jwt\");setIsLoggedIn(false);setCurrentUser(null);setCurrentUser({avatar:\"T T\"});handleCloseModal(\"\");};return{handleLogIn,handleSignUp,handleLogout,errorResponse,setErrorResponse,signupError,setSignupError,loginError,setLoginError};};export default useAuth;","map":{"version":3,"names":["useState","useContext","CurrentUserContext","AuthContext","api","fetchUserInfo","login","loginConfig","signup","signupConfig","useAuth","handleCloseModal","setIsLoggedIn","setCurrentUser","errorResponse","setErrorResponse","signupError","setSignupError","loginError","setLoginError","handleLogIn","_ref","email","password","config","res","token","localStorage","setItem","userInfo","console","error","message","handleSignUp","_ref2","name","avatar","data","log","handleLogout","removeItem"],"sources":["/Users/michaelabudde/practicum/fullstack/se_project_react/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { api, fetchUserInfo } from \"../utils/api\";\nimport { login as loginConfig, signup as signupConfig } from \"../utils/auth\";\n\nconst useAuth = (handleCloseModal) => {\n  const { setIsLoggedIn } = useContext(AuthContext);\n  const { setCurrentUser } = useContext(CurrentUserContext);\n  const [errorResponse, setErrorResponse] = useState(\"\");\n  // changed from response to be more specific\n  const [signupError, setSignupError] = useState(null);\n  const [loginError, setLoginError] = useState(null);\n\n  // debugger;\n  const handleLogIn = async ({ email, password }) => {\n    const config = loginConfig(email, password);\n    try {\n      const res = await api(\"POST\", \"/login\", \"\", config);\n      // Check if the response contains a token\n      if (res.token) {\n        localStorage.setItem(\"jwt\", res.token);\n        setIsLoggedIn(true);\n\n        // Fetch user info and update current user\n        const userInfo = await fetchUserInfo(res.token);\n        setCurrentUser(userInfo);\n\n        handleCloseModal(\"\"); // does it need to handle close if subit already handles close?\n      } else {\n        console.error(res.message);\n        setErrorResponse(res.message || \"Log in failed\");\n        setLoginError(res.message || \"Wrong email or password\");\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      setLoginError(error.message);\n    }\n  };\n\n  const handleSignUp = async ({ name, avatar, email, password }) => {\n    const config = signupConfig(name, avatar, email, password);\n    try {\n      const res = await api(\"POST\", \"/signup\", \"\", config);\n      // Check if the response is successful\n      if (res.data) {\n        // SignUp successful, proceed to login\n        await handleLogIn({ email, password });\n        handleCloseModal(\"\");\n      } else {\n        console.error(res.message);\n        setErrorResponse(res.message || \"Sign up failed\");\n        setSignupError(res.message || \"Email already in use\");\n      }\n    } catch (error) {\n      console.error(\"Error during sign up:\", error);\n      setSignupError(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"jwt\");\n    setIsLoggedIn(false);\n    setCurrentUser(null);\n    setCurrentUser({ avatar: \"T T\" });\n    handleCloseModal(\"\");\n  };\n\n  return {\n    handleLogIn,\n    handleSignUp,\n    handleLogout,\n    errorResponse,\n    setErrorResponse,\n    signupError,\n    setSignupError,\n    loginError,\n    setLoginError,\n  };\n};\n\nexport default useAuth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}