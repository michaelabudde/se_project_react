{"ast":null,"code":"import{baseUrl}from\"./constants\";export const processServerResponse=res=>{if(res.ok){return res.json();}return res.json()// runs if res does not have a json body/ fails to parse\n.catch(()=>{return Promise.reject(new Error(\"Error: \".concat(res.status)));})// we pass back the error message from the backend if it was json\n.then(resBody=>{return Promise.reject(new Error(resBody.message));});};export const api=async function(method,endpoint){let token=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";let body=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;const headers={\"Content-Type\":\"application/json\",Authorization:token?\"Bearer \".concat(token):\"\"};const requestOptions={method:method,headers:headers,body:body?JSON.stringify(body):null};const res=await fetch(\"\".concat(baseUrl).concat(endpoint),requestOptions);return processServerResponse(res);};// debugger;\nexport const getItems=async token=>{try{const response=await api(\"GET\",\"/items\",token);return response;// Return the response from the API call\n}catch(error){// Handle errors if needed\nconsole.error(\"Error fetching items:\",error);throw error;// Rethrow the error to be handled in the calling code\n}};export const addItem=async(token,newItem)=>{try{const res=await api(\"POST\",\"/items\",token,newItem);return res;// Return the response\n}catch(error){// Handle errors if needed\nconsole.error(\"Error adding item:\",error);throw error;// Rethrow the error to be handled in the calling code\n}};export const deleteItem=async(token,itemId)=>{try{const res=await api(\"DELETE\",\"/items/\".concat(itemId),token);return res;}catch(error){console.error(\"Error deleting item:\",error);throw error;// Rethrow the error to be handled in the calling code\n}};export const likeCard=async(token,itemId,isLiked)=>{const method=isLiked?\"DELETE\":\"PUT\";const endpoint=\"/items/\".concat(itemId,\"/likes\");try{const response=await api(method,endpoint,token);return response;}catch(error){console.error(\"Error \".concat(isLiked?\"removing\":\"adding\",\" like:\"),error);throw error;}};export const fetchUserInfo=async token=>{try{const currentUser=await api(\"GET\",\"/users/me\",token);if(currentUser){return currentUser.data;}else{console.error(\"Can't access user\");return null;// Handle fetch failure by returning null\n}}catch(error){console.error(\"Error during fetchUserInfo:\",error);return null;// Handle fetch failure by returning null\n}};export const updateProfile=async(token,data)=>{try{const updatedInfo=await api(\"PATCH\",\"/users/me\",token,data);return updatedInfo;}catch(error){console.error(\"Error updating profile:\",error);throw error;// Rethrow the error to be handled in the calling code\n}};","map":{"version":3,"names":["baseUrl","processServerResponse","res","ok","json","catch","Promise","reject","Error","concat","status","then","resBody","message","api","method","endpoint","token","arguments","length","undefined","body","headers","Authorization","requestOptions","JSON","stringify","fetch","getItems","response","error","console","addItem","newItem","deleteItem","itemId","likeCard","isLiked","fetchUserInfo","currentUser","data","updateProfile","updatedInfo"],"sources":["/Users/michaelabudde/practicum/fullstack/se_project_react/src/utils/api.js"],"sourcesContent":["import { baseUrl } from \"./constants\";\n\nexport const processServerResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return (\n    res\n      .json()\n      // runs if res does not have a json body/ fails to parse\n      .catch(() => {\n        return Promise.reject(new Error(`Error: ${res.status}`));\n      })\n      // we pass back the error message from the backend if it was json\n      .then((resBody) => {\n        return Promise.reject(new Error(resBody.message));\n      })\n  );\n};\n\nexport const api = async (method, endpoint, token = \"\", body = null) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: token ? `Bearer ${token}` : \"\",\n  };\n  const requestOptions = {\n    method: method,\n    headers: headers,\n    body: body ? JSON.stringify(body) : null,\n  };\n  const res = await fetch(`${baseUrl}${endpoint}`, requestOptions);\n  return processServerResponse(res);\n};\n// debugger;\n\nexport const getItems = async (token) => {\n  try {\n    const response = await api(\"GET\", \"/items\", token);\n\n    return response; // Return the response from the API call\n  } catch (error) {\n    // Handle errors if needed\n    console.error(\"Error fetching items:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\n\nexport const addItem = async (token, newItem) => {\n  try {\n    const res = await api(\"POST\", \"/items\", token, newItem);\n    return res; // Return the response\n  } catch (error) {\n    // Handle errors if needed\n    console.error(\"Error adding item:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\n\nexport const deleteItem = async (token, itemId) => {\n  try {\n    const res = await api(\"DELETE\", `/items/${itemId}`, token);\n    return res;\n  } catch (error) {\n    console.error(\"Error deleting item:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\n\nexport const likeCard = async (token, itemId, isLiked) => {\n  const method = isLiked ? \"DELETE\" : \"PUT\";\n  const endpoint = `/items/${itemId}/likes`;\n\n  try {\n    const response = await api(method, endpoint, token);\n    return response;\n  } catch (error) {\n    console.error(`Error ${isLiked ? \"removing\" : \"adding\"} like:`, error);\n    throw error;\n  }\n};\n\nexport const fetchUserInfo = async (token) => {\n  try {\n    const currentUser = await api(\"GET\", \"/users/me\", token);\n    if (currentUser) {\n      return currentUser.data;\n    } else {\n      console.error(\"Can't access user\");\n      return null; // Handle fetch failure by returning null\n    }\n  } catch (error) {\n    console.error(\"Error during fetchUserInfo:\", error);\n    return null; // Handle fetch failure by returning null\n  }\n};\nexport const updateProfile = async (token, data) => {\n  try {\n    const updatedInfo = await api(\"PATCH\", \"/users/me\", token, data);\n    return updatedInfo;\n  } catch (error) {\n    console.error(\"Error updating profile:\", error);\n    throw error; // Rethrow the error to be handled in the calling code\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}