{"ast":null,"code":"import { baseUrl } from \"./constants\";\nexport const processServerResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Error: ${res.status}`);\n};\nexport const api = async (method, endpoint, token = \"\", body = null) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: token ? `Bearer ${token}` : \"\"\n  };\n  console.log(body);\n  const requestOptions = {\n    method: method,\n    headers: headers,\n    body: body ? JSON.stringify(body) : null\n  };\n  const res = await fetch(`${baseUrl}${endpoint}`, requestOptions);\n  console.log(res);\n  return processServerResponse(res);\n};\nexport const addClothingItem = async newItem => {\n  const res = await fetch(`${baseUrl}/items`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name: newItem.name,\n      weather: newItem.weather,\n      imageUrl: newItem.imageUrl\n    })\n  });\n  return processServerResponse(res);\n};\nexport const getClothingItems = async () => {\n  const res = await fetch(`${baseUrl}/items`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return processServerResponse(res);\n};\nexport const deleteClothingItems = async _id => {\n  const res = await fetch(`${baseUrl}/items/${_id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return processServerResponse(res);\n};\nexport const addLike = (data, token) => {\n  return api(\"PUT\", `items/${data._id}/likes`, token);\n}; // itemId or _id ?\n\nexport const removeLike = (data, token) => {\n  return api(\"DELETE\", `items/${data._id}/likes`, token);\n};","map":{"version":3,"names":["baseUrl","processServerResponse","res","ok","json","Promise","reject","status","api","method","endpoint","token","body","headers","Authorization","console","log","requestOptions","JSON","stringify","fetch","addClothingItem","newItem","name","weather","imageUrl","getClothingItems","deleteClothingItems","_id","addLike","data","removeLike"],"sources":["/Users/michaelabudde/practicum/fullstack/se_project_react/src/utils/api.js"],"sourcesContent":["import { baseUrl } from \"./constants\";\n\nexport const processServerResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Error: ${res.status}`);\n};\n\nexport const api = async (method, endpoint, token = \"\", body = null) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: token ? `Bearer ${token}` : \"\",\n  };\n  console.log(body);\n  const requestOptions = {\n    method: method,\n    headers: headers,\n    body: body ? JSON.stringify(body) : null,\n  };\n\n  const res = await fetch(`${baseUrl}${endpoint}`, requestOptions);\n  console.log(res);\n  return processServerResponse(res);\n};\n\nexport const addClothingItem = async (newItem) => {\n  const res = await fetch(`${baseUrl}/items`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      name: newItem.name,\n      weather: newItem.weather,\n      imageUrl: newItem.imageUrl,\n    }),\n  });\n  return processServerResponse(res);\n};\nexport const getClothingItems = async () => {\n  const res = await fetch(`${baseUrl}/items`, {\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  return processServerResponse(res);\n};\n\nexport const deleteClothingItems = async (_id) => {\n  const res = await fetch(`${baseUrl}/items/${_id}`, {\n    method: \"DELETE\",\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  return processServerResponse(res);\n};\nexport const addLike = (data, token) => {\n  return api(\"PUT\", `items/${data._id}/likes`, token);\n}; // itemId or _id ?\n\nexport const removeLike = (data, token) => {\n  return api(\"DELETE\", `items/${data._id}/likes`, token);\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AAErC,OAAO,MAAMC,qBAAqB,GAAIC,GAAG,IAAK;EAC5C,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMC,GAAG,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,EAAEC,KAAK,GAAG,EAAE,EAAEC,IAAI,GAAG,IAAI,KAAK;EACtE,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE,kBAAkB;IAClCC,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG;EAC7C,CAAC;EACDI,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACjB,MAAMK,cAAc,GAAG;IACrBR,MAAM,EAAEA,MAAM;IACdI,OAAO,EAAEA,OAAO;IAChBD,IAAI,EAAEA,IAAI,GAAGM,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,GAAG;EACtC,CAAC;EAED,MAAMV,GAAG,GAAG,MAAMkB,KAAK,CAAE,GAAEpB,OAAQ,GAAEU,QAAS,EAAC,EAAEO,cAAc,CAAC;EAChEF,OAAO,CAACC,GAAG,CAACd,GAAG,CAAC;EAChB,OAAOD,qBAAqB,CAACC,GAAG,CAAC;AACnC,CAAC;AAED,OAAO,MAAMmB,eAAe,GAAG,MAAOC,OAAO,IAAK;EAChD,MAAMpB,GAAG,GAAG,MAAMkB,KAAK,CAAE,GAAEpB,OAAQ,QAAO,EAAE;IAC1CS,MAAM,EAAE,MAAM;IACdI,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CD,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;MACnBI,IAAI,EAAED,OAAO,CAACC,IAAI;MAClBC,OAAO,EAAEF,OAAO,CAACE,OAAO;MACxBC,QAAQ,EAAEH,OAAO,CAACG;IACpB,CAAC;EACH,CAAC,CAAC;EACF,OAAOxB,qBAAqB,CAACC,GAAG,CAAC;AACnC,CAAC;AACD,OAAO,MAAMwB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMxB,GAAG,GAAG,MAAMkB,KAAK,CAAE,GAAEpB,OAAQ,QAAO,EAAE;IAC1CS,MAAM,EAAE,KAAK;IACbI,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC,CAAC;EACF,OAAOZ,qBAAqB,CAACC,GAAG,CAAC;AACnC,CAAC;AAED,OAAO,MAAMyB,mBAAmB,GAAG,MAAOC,GAAG,IAAK;EAChD,MAAM1B,GAAG,GAAG,MAAMkB,KAAK,CAAE,GAAEpB,OAAQ,UAAS4B,GAAI,EAAC,EAAE;IACjDnB,MAAM,EAAE,QAAQ;IAChBI,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC,CAAC;EACF,OAAOZ,qBAAqB,CAACC,GAAG,CAAC;AACnC,CAAC;AACD,OAAO,MAAM2B,OAAO,GAAGA,CAACC,IAAI,EAAEnB,KAAK,KAAK;EACtC,OAAOH,GAAG,CAAC,KAAK,EAAG,SAAQsB,IAAI,CAACF,GAAI,QAAO,EAAEjB,KAAK,CAAC;AACrD,CAAC,CAAC,CAAC;;AAEH,OAAO,MAAMoB,UAAU,GAAGA,CAACD,IAAI,EAAEnB,KAAK,KAAK;EACzC,OAAOH,GAAG,CAAC,QAAQ,EAAG,SAAQsB,IAAI,CAACF,GAAI,QAAO,EAAEjB,KAAK,CAAC;AACxD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}